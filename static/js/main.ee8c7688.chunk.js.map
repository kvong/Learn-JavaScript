{"version":3,"sources":["components/format.js","components/PokeCard.js","components/PokeList.js","components/PokeDex.js","components/PokePage.js","index.js"],"names":["capitalizeName","name","splitName","split","i","length","toUpperCase","substring","join","Pokecard","state","imageUrl","pokeIndex","this","props","url","capName","urlSplit","setState","className","to","src","alt","width","height","React","Component","Pokelist","pokemon","prev","next","prevPage","updatePokelist","nextPage","newUrl","axios","get","res","data","console","log","map","key","onClick","Pokedex","TYPE_COLORS","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Pokepage","prevIndex","nextIndex","types","description","stats","hp","atk","def","spAtk","spDef","speed","abilities","nextPokeIndex","prevPokeIndex","match","params","pokeUrl","stat","base_stat","parseInt","toString","type","style","backgroundColor","ability","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee8c7688.chunk.js","sourcesContent":["function capitalizeName(name) {\n    let splitName = name.split(\" -\");\n    for (let i = 0; i < splitName.length; i++ ){\n        splitName[i] = splitName[i][0].toUpperCase() + splitName[i].substring(1);\n    }\n    let capName = splitName.join(\" \"); \n    return capName;\n}\n\nexport default capitalizeName;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport capitalizeName from './format';\n\n\nexport default class Pokecard extends React.Component{\n    state = {\n        name: '',\n        imageUrl: '',\n        pokeIndex: ''\n    };\n\n    async componentDidMount(){\n        const { name, url } = this.props;\n        const capName = capitalizeName(name);\n        const urlSplit = url.split('/');\n        const pokeIndex = urlSplit[urlSplit.length - 2]\n        const imageUrl = \"https://pokeres.bastionbot.org/images/pokemon/\" + pokeIndex + \".png\"\n        this.setState({name: capName, imageUrl: imageUrl, pokeIndex: pokeIndex})\n    };\n\n    render(){\n        return (\n            <div className='col-lg-2 col-md-3 col-sm-6  border bg-light'>\n                <Link to={`pokemon/${this.state.pokeIndex}`}>\n                    <img src={this.state.imageUrl} alt= {this.state.name} width=\"100em\" height=\"100em\"></img>\n                    <br />\n                    {this.state.name}\n                </Link>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport axios from 'axios';\nimport Pokecard from './PokeCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Pokelist extends React.Component{\n    state = {\n        url: \"https://pokeapi.co/api/v2/pokemon/?limit=36\",\n        pokemon: null,\n        prev: null,\n        next: null\n    };\n\n    async updatePokelist(newUrl){\n        const res = await axios.get(newUrl);\n        this.setState({pokemon: res.data[\"results\"], prev: res.data[\"previous\"], next: res.data[\"next\"]});\n        console.log(res.data[\"previous\"]);\n        console.log(res.data[\"next\"]);\n    }\n\n    prevPage = () => {\n        this.updatePokelist(this.state.prev);\n    }\n\n    nextPage = () => {\n        this.updatePokelist(this.state.next);\n    }\n\n    async componentDidMount(){\n        const res = await axios.get(this.state.url);\n        this.setState({pokemon: res.data[\"results\"], prev: res.data[\"previous\"], next: res.data[\"next\"]});\n    }\n\n    render(){\n        return (\n            (this.state.pokemon ? \n            <div>\n                <div className='row'>\n                        {this.state.pokemon.map((pokemon) => {\n                            return (\n                                <Pokecard key={pokemon.name} \n                                    name={pokemon.name} \n                                    url={pokemon.url}\n                                />);\n                        })}\n                </div>\n                {this.state.prev ?  <button onClick={this.prevPage}>Prev</button> : <div></div>}\n                {this.state.next ?  <button onClick={this.nextPage}>Next</button> : <div></div>}\n            </div>\n            : (<div>Loading Pokemon</div>))\n        );\n    }\n}\n","import Pokelist from './PokeList';\nimport React from 'react';\n\nexport default class Pokedex extends React.Component{\n    render(){\n        return (\n            <div>\n                <div className='container'>\n                    <Pokelist />\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport capitalizeName from './format';\n\nconst TYPE_COLORS = {\n    normal :'A8A77A',\n    fire : 'EE8130',\n    water : '6390F0',\n    electric : 'F7D02C',\n    grass : '7AC74C',\n    ice : '96D9D6',\n    fighting : 'C22E28',\n    poison : 'A33EA1',\n    ground : 'E2BF65',\n    flying : 'A98FF3',\n    psychic : 'F95587',\n    bug : 'A6B91A',\n    rock : 'B6A136',\n    ghost : '735797',\n    dragon : '6F35FC',\n    dark : '705746',\n    steel : 'B7B7CE',\n    fairy : 'D685AD'\n};\n\nexport default class Pokepage extends React.Component{\n    state = {\n        name: '',\n        pokeIndex: '',\n        prevIndex: '',\n        nextIndex: '',\n        imageUrl: '',\n        types: [],\n        description: '',\n        stats: {\n            hp: '',\n            atk: '',\n            def: '',\n            spAtk: '',\n            spDef: '',\n            speed: '',\n        },\n        abilities: [],\n    }\n\n    nextPokemon(){\n        this.setState({pokeIndex: this.nextPokeIndex});\n    }\n\n    prevPokemon(){\n        this.setState({pokeIndex: this.prevPokeIndex});\n    }\n\n    async componentDidMount(){\n        const pokeIndex = this.props.match.params.pokeIndex; \n        const pokeUrl = \"https://pokeapi.co/api/v2/pokemon/\" + pokeIndex + '/';\n        const speciesUrl = \"https://pokeapi.co/api/v2/pokemon-species/\" + pokeIndex + '/';\n        const imageUrl = \"https://pokeres.bastionbot.org/images/pokemon/\" + pokeIndex + \".png\"\n\n        const res = await axios.get(pokeUrl);\n        const name = capitalizeName(res.data.name);\n        const types = res.data.types;\n        console.log(types);\n        let [hp, atk, def, spAtk, spDef, speed ] = '';\n        res.data.stats.map((stat) => {\n            switch(stat.stat.name){\n                case 'hp':\n                    hp = stat.base_stat;\n                    break;\n                case 'attack':\n                    atk = stat.base_stat;\n                    break;\n                case 'defense':\n                    def = stat.base_stat;\n                    break;\n                case 'special-attack':\n                    spAtk = stat.base_stat;\n                    break;\n                case 'special-defense':\n                    spDef = stat.base_stat;\n                    break;\n                case 'speed':\n                    speed = stat.base_stat;\n                    break;\n            }\n        });\n\n        const abilities = res.data.abilities;\n        \n        let prevIndex = parseInt(pokeIndex) - 1\n        prevIndex = prevIndex.toString();\n        let nextIndex = parseInt(pokeIndex) + 1\n        nextIndex = nextIndex.toString();\n\n        this.setState({\n            name: name,\n            pokeIndex: pokeIndex,\n            nextIndex: nextIndex,\n            imageUrl: imageUrl,\n            types: types,\n            stats: {\n                hp: hp,\n                atk: atk,\n                def: def,\n                spAtk: spAtk,\n                spDef: spDef,\n                speed: speed,\n            },\n            abilities: abilities,\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"py-lg-5 px-5 col-lg-3 col-md-6 col-sm-9 border bg-light \">\n                        <h2>{this.state.name}</h2>\n                        <img src={this.state.imageUrl} alt= {this.state.name} width=\"150em\" height=\"150em\"></img>\n                    </div>  \n                    <div className=\"py-lg-5 px-5 col-lg-3 col-md-6 col-sm-9 border bg-light \">\n                        <h3>Type: </h3>\n                        <ul>\n                            {this.state.types.map(type => {\n                                return <li className=\"badge badge-pill px-3 mr-1\" key={type.type.name} style={{backgroundColor: `#${TYPE_COLORS[type.type.name]}`}}>{capitalizeName(type.type.name)}</li>\n                            })}\n                        </ul>\n                    </div>  \n                    <div className=\"py-lg-5 px-5 col-lg-3 col-md-6 col-sm-9 border bg-light \">\n                        <h3>Ability: </h3>\n                        <ul>\n                        {this.state.abilities.map(ability => {\n                            return <li key={ability.ability.name}>{capitalizeName(ability.ability['name'])}</li>\n                        })}\n                        </ul>\n                    </div>  \n                    <div className=\"py-lg-5 px-5 col-lg-3 col-md-6 col-sm-9 border bg-light \">\n                        <h3>Stats: </h3>\n                        <ul>\n                            <li> HP:    {this.state.stats.hp} </li>\n                            <li> Attack:  {this.state.stats.atk} </li>\n                            <li> Defense:  {this.state.stats.def} </li>\n                            <li> Special Attack:  {this.state.stats.spAtk} </li>\n                            <li> Special Defense: {this.state.stats.spDef} </li>\n                            <li> Speed: {this.state.stats.speed} </li>\n                        </ul>\n                    </div>  \n                </div>\n                <Link to='/'>\n                    <button>Back to PokeDex</button>\n                </Link>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport './index.css'\nimport Pokedex from './components/PokeDex';\nimport Pokepage from './components/PokePage';\n\nclass App extends React.Component{\n    render(){\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Pokedex}/>\n                    <Route exact path=\"/pokemon/:pokeIndex\" component={Pokepage}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}